name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
#   schedule:
#     - cron: '0 */6 * * *'  #   分 时 日 月 周

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35 ]
        target: [google_apis]
        arch: [x86_64]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          #cache: gradle
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: checkout  and sync
        shell: bash
        continue-on-error: true
        run: |
          git clone https://oauth2:${{ secrets.GTOKEN }}@github.com/hhhaiai/FastUploadId.git
          echo "==================下载完成，查看当前目录============="
          ls
          cd FastUploadId
          echo "==================进入工程目录,查看当前目录============="
          ls
          echo "===================开始编译=============="
          chmod -R 777 *
          git config core.filemode false
          ./gradlew build
          echo "===================编译完成查看当前目录=============="
          cp -r `find zip -name *.apk` ../a.apk

      - name: cat dirs
        shell: bash
        continue-on-error: true
        run: |
          echo "===================查看目录=============="
          ls

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
           api-level: ${{ matrix.api-level }}
           target: ${{ matrix.target }}
           arch: ${{ matrix.arch }}
           profile: Nexus 6
           avd-name: ${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}
           force-avd-creation: false
           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
           disable-animations: true
           script:  |
                echo "===================查看目录=============="
                ls
                adb install -r -t -g  a.apk
                adb shell pm list package || true

                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/fastbot-thirdpart.jar
                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/monkeyq.jar
                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/framework.jar
                adb push framework.jar /sdcard ||true
                adb push monkeyq.jar /sdcard ||true
                adb push fastbot-thirdpart.jar /sdcard ||true
                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/libs/arm64-v8a/libfastbot_native.so -P libs/arm64-v8a/
                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/libs/armeabi-v7a/libfastbot_native.so -P libs/armeabi-v7a/
                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/libs/x86/libfastbot_native.so -P libs/x86/
                wget https://raw.githubusercontent.com/TestJken66/Fastbot_Android/main/libs/x86_64/libfastbot_native.so -P libs/x86_64/
                chmod -R 777 *
                adb push libs/arm64-v8a/ /data/local/tmp/ ||true
                adb push libs/armeabi-v7a/ /data/local/tmp/ ||true
                adb push libs/x86/ /data/local/tmp/ ||true
                adb push libs/x86_64/ /data/local/tmp/ ||true

                adb shell CLASSPATH=/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar exec app_process /system/bin com.android.commands.monkey.Monkey -p me.fup.v0--agent reuseq --bugreport --output-directory /sdcard/mbugs --running-minutes 3 --throttle 500 -v -v || true